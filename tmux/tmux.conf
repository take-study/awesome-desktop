# Tmux configuration file

# Change prefix key to C-a
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# Reload config file
bind r source-file ~/.tmux.conf \; display-message "Config reloaded!"

# Switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Enable mouse mode
set -g mouse on

# Don't rename windows automatically
set-option -g allow-rename off

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows when a window is closed
set -g renumber-windows on

# Increase scrollback buffer size
set -g history-limit 10000

# Set default terminal mode to 256color mode
set -g default-terminal "screen-256color"

# Enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# Status bar customization - coordinated with global theme variables
set -g status-bg "{{bg_secondary}}"        # Dark background
set -g status-fg "{{fg_primary}}"          # Light foreground
set -g status-interval 5
set -g status-left-length 30
set -g status-right-length 50

# Status bar left side - session info (green like zsh insert mode)
set -g status-left '#[fg={{accent_green}},bold][#S] #[fg={{accent_blue}}]#(whoami)#[default] '

# Status bar right side - time and load (blue theme color)
set -g status-right '#[fg={{accent_blue}}]%H:%M#[default]'

# Window status format
setw -g window-status-format '#[fg={{fg_secondary}}] #I:#W '
setw -g window-status-current-format '#[fg={{bg_primary}},bg={{accent_green}},bold] #I:#W #[default]'

# Pane border colors (theme coordinated)
set -g pane-border-style fg="{{fg_tertiary}}"
set -g pane-active-border-style fg="{{accent_blue}}"

# Message colors
set -g message-style bg="{{bg_secondary}}",fg="{{accent_yellow}}"

# Copy mode highlighting (coordinated colors)
setw -g mode-style bg="{{accent_blue}}",fg="{{bg_primary}}"

# Copy mode - improved system clipboard integration with X11/Wayland support
setw -g mode-keys vi

# Smart clipboard command that works with both X11 and Wayland
# Detects the environment and uses the appropriate clipboard tool
set -g @copy_command 'if [ -n "$WAYLAND_DISPLAY" ]; then wl-copy; elif [ -n "$DISPLAY" ]; then xclip -in -selection clipboard; else cat; fi'
set -g @paste_command 'if [ -n "$WAYLAND_DISPLAY" ]; then wl-paste; elif [ -n "$DISPLAY" ]; then xclip -o -selection clipboard; else cat; fi'

# Copy mode key bindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'if [ -n "$WAYLAND_DISPLAY" ]; then wl-copy; elif [ -n "$DISPLAY" ]; then xclip -in -selection clipboard; else cat; fi'
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'if [ -n "$WAYLAND_DISPLAY" ]; then wl-copy; elif [ -n "$DISPLAY" ]; then xclip -in -selection clipboard; else cat; fi'
bind-key -T copy-mode-vi Escape send-keys -X cancel

# Paste in copy mode - paste from system clipboard and exit copy mode
bind-key -T copy-mode-vi p run-shell 'if [ -n "$WAYLAND_DISPLAY" ]; then wl-paste | tmux load-buffer - ; elif [ -n "$DISPLAY" ]; then xclip -o -selection clipboard | tmux load-buffer - ; fi' \; send-keys -X cancel \; paste-buffer

# Resize panes
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

# Quick window selection
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+
